###################
Supported Platforms
###################

Introduction
============

The Science Pipelines are required to be portable across many compute platforms ranging from high-performance computing centers to laptops (refer to DMS-REQ-0308 in `lse-61`_).
The software will likely work on any Unix-like systems but we limit our testing and support to a fixed set of platforms.
Patches may be accepted from developers who test on other operating systems.

.. _platforms-baseline:

Platforms
=========

We have a baseline platform which is what we are using for integration testing and deployments.
For each product, we also have a number of other platforms which are regularly tested by our continuous integration system to enhance portability.

The baseline platform is currently AlmaLinux 9 on Intel x86_64.

.. note ::
    We aim to stay current with AlmaLinux minor releases.
    Our base OS container will typically be updated to the current AlmaLinux release shortly *after* each major release of the Science Pipelines.
    Shared development machines will be updated on their own schedule during periodic maintenance downtime.

We regularly test the following platforms in addition to the baseline platform:

* macOS Sonoma (14.x) on Apple Silicon;
* AlmaLinux 9 on ARM (aarch64).

See https://rubin-ci.slac.stanford.edu/blue for the current list of regularly-tested platforms.

.. _platforms-environment:

Environment
===========

On each of these platforms, we rely on `Conda`_ and `conda-forge`_ to provide our build- and run-time dependencies, including compilers and the Python interpreter.
The Conda environment for Science Pipelines is generated by :doc:`the rubin-env metapackage </stack/conda>`.
This defines the environment within which our code must execute: all code must be compatible with the current version of ``rubin-env``.
Compatibility with different versions is determined by the ``rubin-env`` semantic version number.
The Conda environment is periodically updated to maintain compatibility, to utilize new features of third-party packages, or to add new dependencies.
To request that a new package be added to the environment, please :doc:`file an RFC </communications/rfc>`.

.. _Conda: https://conda.io
.. _conda-forge: https://conda-forge.org/
.. _scipipe_conda_env: https://github.com/lsst/scipipe_conda_env
.. _lse-61: https://lse-61.lsst.io/
